<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Max Heap on Interview</title><link>https://example.com/tags/Max-Heap/</link><description>Recent content in Max Heap on Interview</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/tags/Max-Heap/index.xml" rel="self" type="application/rss+xml"/><item><title>0318. Kth Smallest Element in a Sorted Matrix</title><link>https://example.com/docs/algs/leetcode/318_kth_smallest_element_in_a_sorted_matrix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/318_kth_smallest_element_in_a_sorted_matrix/</guid><description>Description # Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix.
Note that it is the kth smallest element in the sorted order, not the kth distinct element.
You must find a solution with a memory complexity better than \( \Omicron(n^2) \) .
Solutions # 这里要求空间复杂度要小于 \( \Omicron(n^2) \) ，那么其实可以构造一个大小为 k 的最大堆。不断将元素插入堆中，当堆大小大于 k 时，将堆顶元素出栈。等所有元素都遍历完之后，堆顶元素即为所求元素。</description></item></channel></rss>