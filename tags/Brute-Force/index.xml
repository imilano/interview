<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Brute Force on Interview</title><link>https://example.com/tags/Brute-Force/</link><description>Recent content in Brute Force on Interview</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/tags/Brute-Force/index.xml" rel="self" type="application/rss+xml"/><item><title>0051. N Queens</title><link>https://example.com/docs/algs/leetcode/51_n_queens/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/51_n_queens/</guid><description>Description # The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.
Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.
Each solution contains a distinct board configuration of the n-queens&amp;rsquo; placement, where &amp;lsquo;Q&amp;rsquo; and &amp;lsquo;.&amp;rsquo; both indicate a queen and an empty space, respectively.</description></item><item><title>0052. N Queens II</title><link>https://example.com/docs/algs/leetcode/52_n_queens_ii/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/52_n_queens_ii/</guid><description>Description # The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.
Given an integer n, return the number of distinct solutions to the n-queens puzzle.
Solutions # 这题跟 51 题的解法其实是一致的，区别只是这里求的是一个计数值。
func totalNQueens(n int) int { // 将棋盘全部初始化为点 var res int board := make([][]string, n) for idx, _ := range board { board[idx] = make([]string, n) } for i := 0; i &amp;lt; n ;i++ { for j := 0; j &amp;lt; n; j++ { board[i][j] = &amp;#34;.</description></item></channel></rss>