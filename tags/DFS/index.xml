<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DFS on Interview</title><link>https://example.com/tags/DFS/</link><description>Recent content in DFS on Interview</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/tags/DFS/index.xml" rel="self" type="application/rss+xml"/><item><title>0200. Number of Islands</title><link>https://example.com/docs/algs/leetcode/200_number_of_islands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/200_number_of_islands/</guid><description>Description # Given an m x n 2D binary grid grid which represents a map of &amp;lsquo;1&amp;rsquo;s (land) and &amp;lsquo;0&amp;rsquo;s (water), return the number of islands.
An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.
Solutions # DFS # 典型的 DFS 应用。这里跟求一个图中有多少个连通分量一样，因为每个方格只能是 &amp;lsquo;0&amp;rsquo; 或者 &amp;lsquo;1&amp;rsquo;，所以我们可以在遍历的时候直接把已经遍历过的地方都设为'0&amp;rsquo;。如果不想污染原数组，那么就用一个 map 来记录该位置是否被遍历过即可。
func numIslands(grid [][]byte) int { row, col := len(grid), len(grid[0]) var res int for i := 0; i &amp;lt; row; i++ { for j := 0; j &amp;lt; col; j++ { if grid[i][j] !</description></item></channel></rss>