<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Math on Interview</title><link>https://example.com/tags/Math/</link><description>Recent content in Math on Interview</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/tags/Math/index.xml" rel="self" type="application/rss+xml"/><item><title>0263. Ugly Number</title><link>https://example.com/docs/algs/leetcode/263_ugly_number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/263_ugly_number/</guid><description> Description # An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.
Given an integer n, return true if n is an ugly number.
Solutions # 如果一个数是丑数，那么它的因子必然只有 2、3、5 这三个，那么如果 n 能够被它的这些因子整除，那就不断的缩小 n，最后检查 n 不断被整除后的 n 其是否等于 1 即可。
func isUgly(n int) bool { if n &amp;lt;= 0 { return false } if n &amp;lt;= 6 { return true } for n % 2 == 0 { n /= 2 } for n %3 == 0 { n /= 3 } for n % 5 == 0 { n /= 5 } return n == 1 }</description></item><item><title>0268. Missing Number</title><link>https://example.com/docs/algs/leetcode/268_missing_number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/268_missing_number/</guid><description> Description # Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.
Solutions # 这题很简单，只需要使用求和公式来进行计算就可以了。直接给出代码。
func missingNumber(nums []int) int { n := len(nums) sum := (0+n) * (n+1)/2 for _, num := range nums { sum -= num } return sum }</description></item><item><title>1332. Remove Palindromic Subsequences</title><link>https://example.com/docs/algs/leetcode/1332_remove_palindromic_subsequence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/1332_remove_palindromic_subsequence/</guid><description>Description # You are given a string s consisting only of letters &amp;lsquo;a&amp;rsquo; and &amp;lsquo;b&amp;rsquo;. In a single step you can remove one palindromic subsequence from s.
Return the minimum number of steps to make the given string empty.
A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.</description></item><item><title>1342. Number of Steps to Reduce a Number to Zero</title><link>https://example.com/docs/algs/leetcode/1342_number_of_steps_to_reduce_a_number_to_zero/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/leetcode/1342_number_of_steps_to_reduce_a_number_to_zero/</guid><description> Description # Given an integer num, return the number of steps to reduce it to zero.
In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.
Solutions # 这题太简单了，没什么好说的，直接上代码。
func numberOfSteps(num int) int { var res int for num != 0 { if num%2 == 0 { num /= 2 } else { num -= 1 } res++ } return res }</description></item></channel></rss>