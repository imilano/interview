<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Interview</title><link>https://example.com/docs/algs/others/</link><description>Recent content on Interview</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/docs/algs/others/index.xml" rel="self" type="application/rss+xml"/><item><title>合并两个有序数组</title><link>https://example.com/docs/algs/others/1.-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/others/1.-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>字节真题
描述 # 给出两个递增数组 A=[3,4,5,0,0]、 B=[7,8] 和两个数 m、n 分别表示两个数组中有效元素的个数。其中 A 中的 0 表示该位置为空位，没有元素。要求合并这两个数组，不使用额外空间。
解法 # 插入排序 # 思路很简单，将 B 数组的元素都放到 A 数组无效位置去，然后从放进去的那个位置开始进行插入排序。
归并排序 # 很明显能够看出来这个可以用归并排序的思想来做，但是问题在于不能开辟额外的地址空间，那怎么办呢？其实可以发现 A 数组中是有足够的额外空间的，我们只需要把 A 数组的元素都往后移，那么额外空间就到了 A 数组的前方，那么此时我们就可以进行归并排序了。</description></item><item><title>等概率返回数组中 k 个元素</title><link>https://example.com/docs/algs/others/2.-%E7%AD%89%E6%A6%82%E7%8E%87%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E4%B8%AD-k-%E4%B8%AA%E5%85%83%E7%B4%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/docs/algs/others/2.-%E7%AD%89%E6%A6%82%E7%8E%87%E8%BF%94%E5%9B%9E%E6%95%B0%E7%BB%84%E4%B8%AD-k-%E4%B8%AA%E5%85%83%E7%B4%A0/</guid><description>题目描述 # 给你一个输入数据流，数据内容为一系列的信号。 设计一个方法，能在流的终止信号到达时，返回数据流内的随机k个信号结果。 要求：数据流内每个信号被选中的概率均等。数据流内信号个数不足k个时，全部返回。
Solutions # 这个题之前在考研的时候见过，核心思想是：维持一个大小为 k 的数组，然后将输入的前 k 个元素存入到数组中的，对于后面的每个元素，使用随机数产生一个[0,k-1]之内的数，然后使用这个数作为下标，替换掉数组中对应位置的数。最后返回数组中的这 k 个数为止。</description></item></channel></rss>